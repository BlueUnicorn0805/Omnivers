plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    // id 'com.google.secrets_gradle_plugin' version "0.6.1"
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1'
}

android {
    // downgraded to 30 for now, to make use of Jitsi Meet
    // and to prevent the app from crashing due to PendingIntent flags issue
    // if sdk version is >=31, when using PendingIntent, FLAG_IMMUTABLE should be used.
    compileSdkVersion 33
    defaultConfig {
        configurations.all {
            resolutionStrategy { force 'androidx.appcompat:appcompat:1.3.1' }
            resolutionStrategy { force 'androidx.work:work-runtime:2.6.0' }
            resolutionStrategy {
                force("com.google.crypto.tink:tink-android:1.7.0")
            }
            resolutionStrategy {
                force 'androidx.work:work-runtime:2.7.1'
                // to resolve PendingIntent issue for sdkVersion >= 31
            }
        }
        ndkVersion "25.2.9519653"
        namespace "hawaiiappbuilders.omniversapp"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 51
        versionName "4.7.9" // need to change version name according to the ymd format.
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'


        //resValue "string", "mk", mk

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }

        vectorDrawables.useSupportLibrary = true

    }

    signingConfigs {
        release {
            storeFile file(releaseStoreFile)
            storePassword releaseStorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }
    }

    /*splits {
        abi {
            enable true
            reset()
            include "armeabi", "armeabi-v7a", 'arm64-v8a', "mips", "x86", "x86_64", 'arm64-v8a'
            universalApk true
        }
    }*/

    /*sourceSets {
        main {
            jniLibs.srcDirs = ['native/libs']

        }
    }*/

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            /*firebaseCrashlytics { // Insert this
                nativeSymbolUploadEnabled true
                unstrippedNativeLibsDir file("build/app/intermediates/merged_native_libs/release/out/lib")
            }
            ndk {
                // replace with 'FULL' if you need more info,
                // but note that it will increase the file size of your appbundle dramatically.
                debugSymbolLevel 'SYMBOL_TABLE'
            }*/


            Properties properties = new Properties()
            if (project.rootProject.file('local.properties').canRead()) {
                properties.load(project.rootProject.file("local.properties").newDataInputStream())
            }


            buildConfigField "String", "DevID", properties.getProperty('DevID')
            buildConfigField "String", "H1", properties.getProperty('H1')
            buildConfigField "String", "R2", properties.getProperty('R2')
            buildConfigField "String", "P", properties.getProperty('P')
            buildConfigField "String", "D", properties.getProperty('D')
            buildConfigField "String", "G", properties.getProperty('G')
            buildConfigField "String", "PM", properties.getProperty('PM')
            buildConfigField "String", "Ky", properties.getProperty('Ky')
            buildConfigField "String", "mk", properties.getProperty('mk')
            buildConfigField "String", "AID", properties.getProperty('AID')
            buildConfigField "String", "ACERTI", properties.getProperty('ACERTI')
            buildConfigField "String", "AACCT", properties.getProperty('AACCT')
            signingConfig signingConfigs.release

        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            Properties properties = new Properties()
            if (project.rootProject.file('local.properties').canRead()) {
                properties.load(project.rootProject.file("local.properties").newDataInputStream())
            }


            buildConfigField "String", "DevID", properties.getProperty('DevID')
            buildConfigField "String", "H1", properties.getProperty('H1')
            buildConfigField "String", "R2", properties.getProperty('R2')
            buildConfigField "String", "P", properties.getProperty('P')
            buildConfigField "String", "D", properties.getProperty('D')
            buildConfigField "String", "G", properties.getProperty('G')
            buildConfigField "String", "PM", properties.getProperty('PM')
            buildConfigField "String", "Ky", properties.getProperty('Ky')
            buildConfigField "String", "mk", properties.getProperty('mk')
            buildConfigField "String", "AID", properties.getProperty('AID')
            buildConfigField "String", "ACERTI", properties.getProperty('ACERTI')
            buildConfigField "String", "AACCT", properties.getProperty('AACCT')
        }
    }
    /* packagingOptions {
         resources.excludes.add("META-INF/*")
     }*/
    /*configurations {
        implementation.exclude module: 'proto-google-common-protos'
        implementation.exclude module: 'protolite-well-known-types'
        implementation.exclude module: 'protobuf-lite'
    }*/
    packagingOptions {
        doNotStrip '**.so'
        pickFirst 'protobuf.meta'
        // pickFirst  '**' // > More than one file was found with OS independent path
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
        exclude("META-INF/*.kotlin_module")
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    /*Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def mk = properties.getProperty('mk')
    if (mk == null) mk = "Place mky to local.properties"*/





    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def flavor = variant.name
            def versionName = variant.versionName
            outputFileName = "OmniVersApp-${versionName}-${flavor}.apk"
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            version "3.22.1"
        }
    }


    buildFeatures {
        buildConfig = true
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-process:2.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.google.code.gson:gson:2.9.1'

    implementation 'com.google.android.gms:play-services-maps:19.0.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.maps.android:android-maps-utils:3.8.2'

    // Import the Firebase BoM
    // implementation platform('com.google.firebase:firebase-bom:25.12.0') //:26.8.0

    implementation platform('com.google.firebase:firebase-bom:26.1.0')
    implementation('com.google.firebase:firebase-messaging:23.1.1') // 23.1.1, 21.1.0
    implementation('com.google.firebase:firebase-firestore') // 22.0.0

    // implementation "com.google.firebase:firebase-iid" // 21.1.0
    implementation 'com.google.firebase:firebase-crashlytics' // 17.2.2
    implementation 'com.google.firebase:firebase-analytics' // 17.6.0

    // Payment
    implementation 'net.authorize:accept-sdk-android:1.0.2'

    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'

    //
    // def inAppPaymentsSdkVersion = '1.2.0'
    // implementation "com.squareup.sdk.in-app-payments:card-entry:$inAppPaymentsSdkVersion"
    // implementation "com.squareup.sdk.in-app-payments:google-pay:$inAppPaymentsSdkVersion"
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.5.0'
    implementation 'com.google.android.gms:play-services-wallet:16.0.1'

    implementation 'com.github.yalantis:ucrop:2.2.6'

    implementation project(':countrycodepicker')
    implementation project(':segmentedcontrol')
    implementation project(':CurrencyEditText')

    // implementation fileTree(dir: "libs", include: ["*.aar"])
    //implementation ('org.jitsi.react:jitsi-meet-sdk:7.0.1') { transitive = true }
    //   implementation ('org.jitsi.react:jitsi-meet-sdk:+') { transitive = true }
    implementation 'com.budiyev.android:code-scanner:2.1.0'

    // Biometrics Authentication
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha02"

    implementation 'androidx.work:work-runtime:2.7.1'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.1'

    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'

    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation "androidx.security:security-crypto:1.0.0-rc03"

    //implementation 'live.videosdk:rtc-android-sdk:0.1.13'

    // library to perform Network call to generate a meeting id
    implementation 'com.amitshekhar.android:android-networking:1.0.2'

    // Jitsi Meet
    // Comment for now, wait for sdkVersion >31 support/update
    // implementation('org.jitsi.react:jitsi-meet-sdk:2.8.2') { transitive = true }
    implementation('org.jitsi.react:jitsi-meet-sdk:8.6.1') { transitive = true }

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    // Swipe refresh layout
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Scalable size unit (Support different screen size)
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    // MultiDex
    implementation 'com.android.support:multidex:1.0.3'

    //Curl logger
    implementation("com.github.grapesnberries:curlloggerinterceptor:0.1")

    // implementation files('libs/proto-google-common-protos-2.14.0.jar')
    //  implementation files('libs/protobuf-java-3.21.12.jar')
    // implementation 'com.google.protobuf:protobuf-lite:3.0.1'
    // implementation 'io.grpc:grpc-protobuf-lite:1.3.0'
    // implementation 'com.google.api.grpc:googleapis-common-protos:0.0.3'
    // implementation 'com.google.protobuf:protobuf-javalite:3.11.0'

    implementation group: 'commons-codec', name: 'commons-codec', version: '1.5'

    // Node Graph
    // implementation 'dev.bandb.graphview:graphview:0.8.1'

    implementation 'de.blox.treeview:treeview:0.1.0'

    // implementation 'com.facebook.react:react-native:0.20.1'

    // For Video Call
//    implementation "io.agora.rtc:full-sdk:4.3.0"

    implementation 'com.rmtheis:tess-two:6.0.4'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.firebase:firebase-appindexing:20.0.0'
    implementation 'com.google.zxing:core:3.3.3'
    implementation project(':openCVLibrary310')

    /*camera 2 api for video call*/
    implementation "androidx.camera:camera-core:1.1.0"
    implementation "androidx.camera:camera-camera2:1.1.0"
    implementation "androidx.camera:camera-lifecycle:1.1.0"
    implementation 'androidx.camera:camera-view:1.0.0-alpha25'
    implementation "androidx.camera:camera-extensions:1.0.0-alpha25"

    // Replace x.y.z with a specific SDK version number. For example, 4.3.0
    implementation 'io.agora.rtc:full-sdk:4.3.2'
}


configurations {
    // implementation.exclude module: 'proto-google-common-protos'
    // implementation.exclude module: 'protolite-well-known-types'

    implementation.exclude module: 'protobuf-lite'
}
